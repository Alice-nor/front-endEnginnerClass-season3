{"version":3,"sources":["MyTable.js","App.js","AppBar.js","reportWebVitals.js","index.js"],"names":["MyCell","props","TableCell","align","onClick","handleClick","index","task","MyTable","Table","style","width","TableHead","TableRow","title","TableBody","taskList","map","App","useState","text","setText","setTask","done","setDone","status","console","log","Grid","container","spacing","item","xs","TextField","id","label","value","onChange","e","target","Button","variant","list","push","verticalAlign","data","fetch","method","headers","body","JSON","stringify","then","res","json","catch","error","alert","new_list","slice","concat","new_done","background","color","window","confirm","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","ButtonAppBar","classes","showTodo","setShowTodo","className","AppBar","position","Toolbar","IconButton","edge","Typography","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63bfcde1.chunk.js","sourcesContent":["import Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\n// MyTable 的子原件\nfunction MyCell(props){\n    const handleClick = () => {\n        props.handleClick(props.index);\n    }\n\n    return (\n        <TableCell align='left'\n            onClick={handleClick}>{props.task}</TableCell>\n    )\n}\n\n\n\nfunction MyTable(props) {\n    return (\n            <Table style={{width:'30%'}}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align='left'>{props.title}</TableCell>\n                    </TableRow>\n                </TableHead>\n\n                <TableBody>\n                    {props.taskList.map((task,index) =>{\n                        return (\n                            <TableRow key={index}>\n                                <MyCell task={task}\n                                    index={index}\n                                    handleClick={props.handleClick}/>\n                            </TableRow>\n                        )\n                    })}\n                </TableBody>\n            </Table>\n    )\n}\n\nexport default MyTable;\n","import {useState, useEffect} from 'react';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport MyTable from './MyTable';\nimport Grid from '@material-ui/core/Grid';\n\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [task, setTask] = useState([]); // 存 Todolist 的工作項目\n  const [done, setDone] = useState([]); // 儲存已做完項目\n  const [status, setStatus] = useState('資料讀取中...');\n\n   const handleClick = (e) => {\n    const list = task;\n    list.push(text);\n    setTask(list);\n    setText('');\n  }\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  }\n\n  const removeTask = (index) => {\n    console.log('remove task',index);\n    const list = task;\n    const new_list = list.slice(0,index).concat(list.slice(index+1));\n    setTask(new_list);\n    const new_done = done;\n    new_done.push(task[index]);\n    setDone(new_done);\n  }\n\n  const removeDone = (index) => {\n    console.log('remove done',index);\n    const list = done;\n    const new_list = list.slice(0,index).concat(list.slice(index+1));\n    setDone(new_list);\n  }\n\n  // 儲存資料\n  const handleSave = () => {\n    const data = {\n      task: task,\n      done: done\n    };\n\n    fetch('http://localhost/api/save_task.php',{\n      method: 'POST',\n      headers: {\n        'Content-Type' : 'application/json',\n      },\n      body: JSON.stringify(data)\n    })\n    .then(res => res.json())\n    .then(data => {\n      console.log('data: ',data)\n      // if(data['status'] === 'succ') {\n      //   alert('存檔成功')\n      // } else {\n      //   alert('存檔失敗');\n      // }\n    })\n    .catch(error => { // 捕捉錯誤\n      alert('Error',error);\n      console.log('data error:',data);\n    })\n  }\n\n  // 從雲端下載\n  const handleLoad = () => {\n    fetch('http://localhost/api/load_task.php',{\n      method: 'GET',\n    })\n    .then(res => {\n      return res.json();\n    })\n    .then(data => {\n      console.log('data: ',data);\n      setTask(data['task']);\n      setDone(data['done']);\n      // if(data['status'] == 'succ') {\n      //   alert('存檔成功')\n      // } else {\n      //   alert('存檔失敗');\n      // }\n    })\n    .catch(error => { // 捕捉錯誤\n      alert('Error',error);\n    })\n  }\n\n\n  const removeAllTask = (index) => {\n    console.log('removeAllTask')\n    if(window.confirm('確定刪除？')===true){\n      let list = task;\n      list = [];\n      setTask(list);\n    }\n  }\n\n\n  const removeAllDone = (index) => {\n    if(window.confirm('確定刪除？')===true){\n      let list = done;\n      list = [];\n      setDone(list);\n    }\n  }\n\n  // componentDidMount\n  // useEffect(() => {\n  //   console.log('useEffect');\n  //   handleLoad();\n  //   if(status !== ''){\n  //     setStatus('');\n  //   }\n  // },[]);\n\n\n\n  console.log('App => task = ',task);\n  return (\n    <div style={{width:'900px'}}>\n      {/* <TextField id=\"standard-basic\" label=\"Task\" value={text} onChange={handleChange} />\n      <Button variant=\"outlined\" onClick={handleClick} style={{verticalAlign: 'bottom'}}>{buttonFace}</Button>\n      <p>{content}</p>\n      <MyTable taskList={task} handleClick={removeTask}/> */}\n\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <TextField id='standard-basic' label='Task'\n            value={text} onChange={handleChange}></TextField>\n          <Button variant='outlined'\n            onClick={handleClick}\n            style={{verticalAlign:'bottom'}}>新增工作項目</Button>\n          <Button variant='outlined'\n            onClick={handleSave}\n            style={{verticalAlign:'bottom'}}>儲存到雲端</Button>\n          <Button variant='outlined'\n            onClick={handleLoad}\n            style={{verticalAlign:'bottom'}}>從雲端下載</Button>\n            <br/>{status}\n        </Grid>\n\n        <Grid item xs={6}>\n          <MyTable taskList={task} handleClick={removeTask} title={'未完成工作項目'}></MyTable>\n          <Button style={{background:'red',color:'white'}} onClick={removeAllTask}>清除未完成工作項目</Button>\n        </Grid>\n        <Grid item xs={6}>\n          <MyTable taskList={done} handleClick={removeDone} title={'已完成工作項目'}></MyTable>\n          <Button style={{background:'green',color:'white'}} onClick={removeAllDone}>清除已完成工作項目</Button>\n        </Grid>\n      </Grid>\n\n    </div>\n\n\n  );\n}\nexport default App;\n","import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport TodoList from './App';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n  const [showTodo, setShowTodo] = useState(false);\n  const handleClick = () => {\n      setShowTodo(!showTodo);\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            News\n          </Typography>\n          <Button color=\"inherit\" onClick={handleClick}>Todo List</Button>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n      {\n          (showTodo)? <TodoList/> : null\n      }\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './AppBar';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}