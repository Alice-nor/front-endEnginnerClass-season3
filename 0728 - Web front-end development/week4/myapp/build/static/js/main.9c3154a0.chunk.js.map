{"version":3,"sources":["reportWebVitals.js","App7.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","props","state","content","a_val","b_val","getData","bind","postData","formData","changeA","changeB","fetch","this","method","res","json","data","console","log","setState","catch","err","headers","body","JSON","stringify","a","b","Object","keys","map","keyname","encodeURIComponent","join","e","target","value","type","onChange","onClick","Component","ReactDOM","render","A","id","document","getElementById"],"mappings":"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","file":"static/js/main.9c3154a0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {Component} from 'react';\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            content: '',\n            a_val: '',\n            b_val: ''\n        }\n\n        this.getData = this.getData.bind(this);\n        this.postData = this.postData.bind(this);\n        this.formData = this.formData.bind(this);\n        this.changeA = this.changeA.bind(this);\n        this.changeB = this.changeB.bind(this);\n\n    }\n\n    // get 讀取資料\n    getData(){\n        // fetch (url, {method:get..})\n        fetch('http://localhost/read_data.php?f=2&a='+this.state.a_val+'&b='+this.state.b_val,{method:'GET'})\n        .then(res => res.json())\n        .then(data => {\n            console.log('data: ',data);\n            if (data['status']==='succ'){\n                this.setState({content:data['result']});\n            }\n            else {\n                this.setState({content:data['ERROR']});\n            }  \n        })\n        .catch(err=> {\n            console.log('Err:',err);\n        })\n    }\n\n    // post 讀取資料\n    postData(){\n        // fetch (url, {method:get..})\n        fetch('http://localhost/read_data.php',{\n            method:'POST',\n            headers:{\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({a:this.state.a_val, b:this.state.b_val})\n        })\n        .then(res => res.json())\n        .then(data => {\n            console.log('data:',data);\n            if(data['status']==='succ'){\n                this.setState({content:data['result']});\n            }\n            else {\n                this.setState({content:data['ERROR']});\n            }  \n        })\n        .catch(err=>{\n            console.log('Err:',err);\n        })\n    }\n\n    formData(){\n        let data = {\n            a:this.state.a_val,\n            b:this.state.b_val};\n        const formData = Object.keys(data).map(\n            (keyname) => {\n                return encodeURIComponent(keyname)+'='+encodeURIComponent(data[keyname]);\n            }\n        ).join('&');\n\n        fetch('http://localhost/read_data.php',{\n            method:'POST',\n            headers:{\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: formData\n        })\n        .then(res => res.json())\n        .then(data => {\n            console.log('data:',data);\n            if(data['status']==='succ'){\n                this.setState({content:data['result']});\n            }\n            else {\n                this.setState({content:data['ERROR']});\n            }  \n        })\n        .catch(err=>{\n            console.log('Err:',err);\n        })\n    }\n\n    changeA(e){\n        this.setState({a_val: e.target.value});\n    }\n\n    changeB(e){\n        this.setState({b_val: e.target.value});\n    }\n\n    render(){\n        return (\n            <div>\n                a:<input type='text' value={this.state.a_val} onChange={this.changeA}/><br/>\n                b:<input type='text' value={this.state.b_val} onChange={this.changeB}/><br/>\n\n                <button onClick={this.getData}>Get Data</button><br/>\n                <button onClick={this.postData}>Post Data</button><br/>\n                <button onClick={this.formData}>Form Data</button><br/>\n                <p>{this.state.content}</p>\n            </div>\n           \n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './Baby';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App7';\n// import 自建之 module\n// import Progress from './Progress.js'; \n\n\nReactDOM.render( \n    <div>\n        <App A={200}/>\n        <div id='talk'></div>\n    </div>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}