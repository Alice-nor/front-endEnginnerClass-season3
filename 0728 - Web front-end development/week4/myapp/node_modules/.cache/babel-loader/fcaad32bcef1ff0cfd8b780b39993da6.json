{"ast":null,"code":"var _jsxFileName = \"/Users/Alice/Desktop/\\u524D\\u7AEF\\u990A\\u6210\\u7B2C\\u4E09\\u671F/0719-21 React/week4/myapp/src/App8.js\";\nimport React, { Component } from 'react';\nimport Item from './Item';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemList: [],\n      // 放入 list 的陣列\n      content: '' // 輸入框文字內容\n\n    };\n    this.handleChange = this.handleChange.bind(this); // input 輸入\n\n    this.handleClick = this.handleClick.bind(this); // 按下 add\n\n    this.itemClear = this.itemClear.bind(this); // 按下 clear\n\n    this.removeItem = this.removeItem.bind(this); // 按自己本身可刪除\n  }\n\n  handleChange(e) {\n    // 輸入框之變化\n    console.log('text:', e.target.value);\n    this.setState({\n      content: e.target.value\n    });\n  }\n\n  removeItem(index) {\n    console.log('removeItem() called by item = ', index);\n  }\n\n  handleClick() {\n    // 按下 add 要新增 list 的變化\n    const old_list = this.state.itemList; // 取得陣列\n\n    let value = this.state.content; // 取得輸入框之文字內容\n    // 更新新的 list 內容到原本的陣列中\n\n    old_list.push( /*#__PURE__*/_jsxDEV(Item, {\n      text: value,\n      index: old_list.length,\n      handleClick: this.removeItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }, this)); // 呈現陣列並把輸入框之內容清空\n\n    this.setState({\n      itemList: old_list,\n      content: ''\n    });\n  }\n\n  itemClear() {\n    // 清空陣列\n    this.setState({\n      itemList: []\n    });\n  }\n\n  render() {\n    console.log('App > render()');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"fld\",\n        value: this.state.content,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 64\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.itemClear,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 64\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.itemList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Alice/Desktop/前端養成第三期/0719-21 React/week4/myapp/src/App8.js"],"names":["React","Component","Item","App","constructor","props","state","itemList","content","handleChange","bind","handleClick","itemClear","removeItem","e","console","log","target","value","setState","index","old_list","push","length","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AACxBG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAC,EADA;AACI;AACbC,MAAAA,OAAO,EAAC,EAFC,CAEE;;AAFF,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB,CANc,CAMoC;;AAClD,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB,CAPc,CAOkC;;AAChD,SAAKE,SAAL,GAAiB,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAAjB,CARc,CAQ8B;;AAC5C,SAAKG,UAAL,GAAkB,KAAKA,UAAL,CAAgBH,IAAhB,CAAqB,IAArB,CAAlB,CATc,CASgC;AACjD;;AAEDD,EAAAA,YAAY,CAACK,CAAD,EAAI;AACZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,CAAC,CAACG,MAAF,CAASC,KAA7B;AACA,SAAKC,QAAL,CAAc;AAACX,MAAAA,OAAO,EAACM,CAAC,CAACG,MAAF,CAASC;AAAlB,KAAd;AACH;;AAEDL,EAAAA,UAAU,CAACO,KAAD,EAAO;AACbL,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA6CI,KAA7C;AACH;;AAEDT,EAAAA,WAAW,GAAE;AACT;AACA,UAAMU,QAAQ,GAAG,KAAKf,KAAL,CAAWC,QAA5B,CAFS,CAE6B;;AACtC,QAAIW,KAAK,GAAG,KAAKZ,KAAL,CAAWE,OAAvB,CAHS,CAGuB;AAChC;;AACAa,IAAAA,QAAQ,CAACC,IAAT,eAAc,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEJ,KAAZ;AACV,MAAA,KAAK,EAAEG,QAAQ,CAACE,MADN;AAEV,MAAA,WAAW,EAAE,KAAKV;AAFR;AAAA;AAAA;AAAA;AAAA,YAAd,EALS,CAQT;;AACA,SAAKM,QAAL,CAAc;AAACZ,MAAAA,QAAQ,EAAEc,QAAX;AAAoBb,MAAAA,OAAO,EAAC;AAA5B,KAAd;AACH;;AAEDI,EAAAA,SAAS,GAAE;AACP;AACA,SAAKO,QAAL,CAAc;AAACZ,MAAAA,QAAQ,EAAC;AAAV,KAAd;AACH;;AAEDiB,EAAAA,MAAM,GAAE;AACJT,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,wBACI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACI,QAAA,EAAE,EAAC,KADP;AAEI,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWE,OAFtB;AAGI,QAAA,QAAQ,EAAE,KAAKC;AAHnB;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAQ,QAAA,OAAO,EAAE,KAAKE,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAKmD;AAAA;AAAA;AAAA;AAAA,cALnD,eAMI;AAAQ,QAAA,OAAO,EAAE,KAAKC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAMmD;AAAA;AAAA;AAAA;AAAA,cANnD,eAOI;AAAA,kBAAI,KAAKN,KAAL,CAAWC;AAAf;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AArDuB;;AAwD5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Item from './Item'\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            itemList:[], // 放入 list 的陣列\n            content:'' // 輸入框文字內容\n        }\n        this.handleChange = this.handleChange.bind(this); // input 輸入\n        this.handleClick = this.handleClick.bind(this); // 按下 add\n        this.itemClear = this.itemClear.bind(this); // 按下 clear\n        this.removeItem = this.removeItem.bind(this); // 按自己本身可刪除\n    }\n\n    handleChange(e) {\n        // 輸入框之變化\n        console.log('text:',e.target.value);\n        this.setState({content:e.target.value});\n    }\n\n    removeItem(index){\n        console.log('removeItem() called by item = ',index);\n    }\n\n    handleClick(){\n        // 按下 add 要新增 list 的變化\n        const old_list = this.state.itemList; // 取得陣列\n        let value = this.state.content; // 取得輸入框之文字內容\n        // 更新新的 list 內容到原本的陣列中\n        old_list.push(<Item text={value}\n            index={old_list.length}\n            handleClick={this.removeItem} />);\n        // 呈現陣列並把輸入框之內容清空\n        this.setState({itemList: old_list,content:''});\n    }\n\n    itemClear(){\n        // 清空陣列\n        this.setState({itemList:[]});\n    }\n\n    render(){\n        console.log('App > render()');\n        return (\n            <div>\n                <input type='text'\n                    id='fld'\n                    value={this.state.content}\n                    onChange={this.handleChange}/>\n                <button onClick={this.handleClick}>Add</button><br/>\n                <button onClick={this.itemClear}>Clear</button><br/>\n                <p>{this.state.itemList}</p>\n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}