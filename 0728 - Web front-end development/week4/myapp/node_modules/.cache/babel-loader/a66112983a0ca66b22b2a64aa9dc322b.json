{"ast":null,"code":"var _jsxFileName = \"/Users/Alice/Desktop/\\u524D\\u7AEF\\u990A\\u6210\\u7B2C\\u4E09\\u671F/0719-21 React/week4/myapp/src/App9.js\";\nimport React, { Component } from 'react';\nimport Item from './Item';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemList: [],\n      // 未完成項目之陣列\n      okList: [],\n      // 已完成項目之陣列\n      content: '' // 輸入框文字內容\n\n    };\n    this.handleChange = this.handleChange.bind(this); // input 輸入\n\n    this.handleClick = this.handleClick.bind(this); // 按下 add 新增未完成項目\n\n    this.itemClear = this.itemClear.bind(this); // 清空未完成陣列\n\n    this.removeItem = this.removeItem.bind(this); // 未完成項目變至已完成陣列內\n\n    this.removeOk = this.removeOk.bind(this); // 清空已完成項目\n\n    this.okClear = this.okClear.bind(this); // 清空已完成陣列\n  } // 輸入框之變化並取得 value\n\n\n  handleChange(e) {\n    console.log('text:', e.target.value);\n    this.setState({\n      content: e.target.value\n    });\n  } // 把項目新增到 已完成項目 列\n\n\n  removeItem(index) {\n    console.log('removeItem() called by item = ', index);\n\n    if (window.confirm('確定移到已完成項目清單？')) {\n      const old_list = this.state.itemList; // 取得未完成陣列\n\n      const new_item = old_list.slice(index, index + 1); // 取得已完成之項目\n\n      const change_list = old_list.slice(0, index).concat(old_list.slice(index + 1)); // 取得更改後之未完成陣列\n      // 把已完成的項目加入到 已完成項目 列\n\n      const finish_item = this.state.okList; // 取得已完成陣列\n\n      finish_item.push(new_item); // 新增項目至已完成陣列\n      // finish_item.push(new_list);\n\n      this.setState({\n        okList: finish_item\n      }); // 更新已完成陣列\n\n      this.setState({\n        itemList: change_list\n      }); // 更新未完成陣列  \n    }\n  } // 按下 add 要新增 list 的變化\n\n\n  handleClick() {\n    const old_list = this.state.itemList; // 取得陣列\n    // 更新新的 list 內容到原本的陣列中\n\n    old_list.push(this.state.content); // 呈現陣列並把輸入框之內容清空\n\n    this.setState({\n      itemList: old_list,\n      content: ''\n    });\n  } // 清空未完成陣列\n\n\n  itemClear() {\n    if (window.confirm('確定刪除？') === true) {\n      this.setState({\n        itemList: []\n      });\n    }\n  } // 清空已完成項目\n\n\n  removeOk(index) {\n    if (window.confirm('確定刪除？') === true) {\n      const finish_list = this.state.okList;\n      const change_list = finish_list.slice(0, index).concat(finish_list.slice(index + 1));\n      this.setState({\n        okList: change_list\n      });\n    }\n  } // 清空已完成陣列\n\n\n  okClear() {\n    if (window.confirm('確定刪除？') === true) {\n      this.setState({\n        okList: []\n      });\n    }\n  }\n\n  render() {\n    console.log('App > render()');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.content,\n        id: \"fld\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: \"\\u65B0\\u589E\\u5DE5\\u4F5C\\u9805\\u76EE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 67\n      }, this), \"\\u672A\\u5B8C\\u6210\\u9805\\u76EE\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.itemClear,\n        children: \"\\u6E05\\u7A7A\\u672A\\u5B8C\\u6210\\u9805\\u76EE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.itemList.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(Item, {\n            text: value,\n            index: index,\n            handleClick: this.removeItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"============\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 36\n      }, this), \"\\u5DF2\\u7D93\\u5B8C\\u6210\\u9805\\u76EE\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.okClear,\n        children: \"\\u6E05\\u7A7A\\u5DF2\\u5B8C\\u6210\\u9805\\u76EE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.okList.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(Item, {\n            text: value,\n            index: index,\n            handleClick: this.removeOk\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Alice/Desktop/前端養成第三期/0719-21 React/week4/myapp/src/App9.js"],"names":["React","Component","Item","App","constructor","props","state","itemList","okList","content","handleChange","bind","handleClick","itemClear","removeItem","removeOk","okClear","e","console","log","target","value","setState","index","window","confirm","old_list","new_item","slice","change_list","concat","finish_item","push","finish_list","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Item from './Item'\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            itemList:[], // 未完成項目之陣列\n            okList:[], // 已完成項目之陣列\n            content:'' // 輸入框文字內容\n        }\n        this.handleChange = this.handleChange.bind(this); // input 輸入\n        this.handleClick = this.handleClick.bind(this); // 按下 add 新增未完成項目\n        this.itemClear = this.itemClear.bind(this); // 清空未完成陣列\n        this.removeItem = this.removeItem.bind(this); // 未完成項目變至已完成陣列內\n        this.removeOk = this.removeOk.bind(this); // 清空已完成項目\n        this.okClear = this.okClear.bind(this); // 清空已完成陣列\n    }\n\n    // 輸入框之變化並取得 value\n    handleChange(e) {\n        console.log('text:',e.target.value);\n        this.setState({content:e.target.value});\n    }\n\n    // 把項目新增到 已完成項目 列\n    removeItem(index){\n        console.log('removeItem() called by item = ',index);\n        if(window.confirm('確定移到已完成項目清單？')){\n            const old_list = this.state.itemList; // 取得未完成陣列\n            const new_item = old_list.slice(index,index+1); // 取得已完成之項目\n            const change_list = old_list.slice(0,index).concat(old_list.slice(index+1)) // 取得更改後之未完成陣列\n            \n            // 把已完成的項目加入到 已完成項目 列\n            const finish_item = this.state.okList; // 取得已完成陣列\n            finish_item.push(new_item); // 新增項目至已完成陣列\n            // finish_item.push(new_list);\n            this.setState({okList: finish_item}); // 更新已完成陣列\n            this.setState({itemList: change_list}); // 更新未完成陣列  \n        }  \n    }\n\n    // 按下 add 要新增 list 的變化\n    handleClick(){\n        const old_list = this.state.itemList; // 取得陣列\n        // 更新新的 list 內容到原本的陣列中\n        old_list.push(this.state.content);\n        // 呈現陣列並把輸入框之內容清空\n        this.setState({itemList: old_list,content:''});\n    }\n\n    // 清空未完成陣列\n    itemClear(){\n        if(window.confirm('確定刪除？')===true){\n            this.setState({itemList:[]});\n        } \n    }\n\n    // 清空已完成項目\n    removeOk(index){\n        if(window.confirm('確定刪除？')===true){\n            const finish_list = this.state.okList;\n            const change_list = finish_list.slice(0,index).concat(finish_list.slice(index+1));\n            this.setState({okList: change_list});\n        } \n    }\n\n    // 清空已完成陣列\n    okClear(){\n        if(window.confirm('確定刪除？')===true){\n            this.setState({okList:[]});\n        } \n    }\n\n    render(){\n        console.log('App > render()');\n        return (\n            <div>\n                <input type='text' value={this.state.content}\n                    id='fld' onChange={this.handleChange}></input>\n                <button onClick={this.handleClick}>新增工作項目</button><br/>\n                未完成項目<button onClick={this.itemClear}>清空未完成項目</button>\n                <div>{\n                    this.state.itemList.map((value,index)=>{\n                        return <Item text={value} index={index}\n                        handleClick={this.removeItem} />\n                    })\n                    }\n                </div>\n                <p>============</p><br/>\n                已經完成項目<button onClick={this.okClear}>清空已完成項目</button>\n                <div>{\n                    this.state.okList.map((value,index)=>{\n                        return <Item text={value} index={index}\n                        handleClick={this.removeOk} />\n                    })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}