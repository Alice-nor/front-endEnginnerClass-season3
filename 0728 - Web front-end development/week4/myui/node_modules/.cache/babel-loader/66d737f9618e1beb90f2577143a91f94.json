{"ast":null,"code":"var _jsxFileName = \"/Users/Alice/Desktop/\\u524D\\u7AEF\\u990A\\u6210\\u7B2C\\u4E09\\u671F/0719-21&23&26 React/week4/myui/src/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { IconButton } from '@material-ui/core';\nimport Userform from './UserForm';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: 'gray',\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\n\nfunction createData(name, gender, phone, email) {\n  // 回傳成物件\n  return {\n    name,\n    gender,\n    phone,\n    email\n  };\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  }\n});\nexport default function CustomizedTables() {\n  _s();\n\n  const classes = useStyles();\n  const [rows, setRows] = React.useState([]);\n  const [openAdd, setopenAdd] = React.useState(false);\n  const [openEdit, setOpenEdit] = React.useState(false);\n  const [editIndex, setEditIndex] = React.useState(0); // 新增資料\n\n  const addRecord = (isAdd, name, gender, phone, email) => {\n    if (isAdd) {\n      const row = createData(name, gender, phone, email);\n      const data = {\n        func: 'insert',\n        data: row\n      };\n      fetch('http://localhost/api/user_mgt.php', {\n        method: 'POST',\n        body: JSON.stringify(data),\n        // 傳給後端 api 的參數\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        if (data['status'] === 'succ') {\n          row.id = data['id'];\n          const list = rows; // 所有資料\n\n          list.push(row); // 新增資料\n\n          setRows(list.slice(0));\n        }\n      }).catch(e => {\n        // 有錯\n        console.log('fetch error:', e);\n      });\n    }\n\n    setopenAdd(false);\n  };\n\n  const modRecord = (isMod, name, gender, phone, email, index) => {\n    console.log('modRecord: index =', index);\n\n    if (isMod) {\n      const list = rows;\n      list[index] = createData(name, gender, phone, email);\n      setRows(list.slice(0)); // slice(0) 全陣列的複製\n\n      const row = createData(name, gender, phone, email);\n      row.id = rows[index].id;\n      const data = {\n        func: 'update',\n        data: row\n      };\n      fetch('http://localhost/api/user_mgt.php', {\n        method: 'POST',\n        body: JSON.stringify(data),\n        // 傳給後端 api 的參數\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        if (data['status'] === 'succ') {\n          const list = rows; // 所有資料\n\n          list[index] = row; // 更新資料\n\n          setRows(list.slice(0));\n          console.log('fetch update succ, rows:', rows);\n        }\n      }).catch(e => {\n        // 有錯\n        console.log('fetch error:', e);\n      });\n    }\n\n    setOpenEdit(false);\n  };\n\n  const delRecord = index => {\n    if (window.confirm('確認刪除此筆紀錄？[ ' + rows[index].name + ' ]')) {\n      // const list = rows;\n      // const newList = list.slice(0,index).concat(list.slice(index+1));\n      // setRows(newList);\n      const data = {\n        func: 'delete',\n        id: rows[index].id\n      };\n      fetch('http://localhost/api/user_mgt.php', {\n        method: 'POST',\n        body: JSON.stringify(data),\n        // 傳給後端 api 的參數\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        if (data['status'] === 'succ') {\n          const list = rows;\n          const newList = list.slice(0, index).concat(list.slice(index + 1));\n          setRows(newList);\n        }\n      }).catch(e => {\n        // 有錯\n        console.log('fetch error:', e);\n      });\n    }\n  }; // componentDidMount\n\n\n  React.useEffect(() => {\n    const data = {\n      func: 'query'\n    };\n    fetch('http://localhost/api/user_mgt.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data) // 傳給後端 api 的參數\n\n    }).then(res => res.json()).then(data => {\n      if (data['status'] === 'succ') {\n        console.log('data: ', data);\n        setRows(data['data']);\n      }\n    }).catch(e => {\n      // 有錯\n      console.log('catch error!');\n      console.log('fetch error:', e);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => setopenAdd(true),\n      children: \"\\u65B0\\u589E\\u806F\\u7D61\\u4EBA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), openAdd && /*#__PURE__*/_jsxDEV(Userform, {\n      op: \"add\",\n      func: addRecord,\n      data: createData('', '', '', '')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 22\n    }, this), openEdit && /*#__PURE__*/_jsxDEV(Userform, {\n      op: \"edit\",\n      func: modRecord,\n      data: rows[editIndex],\n      index: editIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"customized table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"\\u59D3\\u540D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"\\u6027\\u5225\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"\\u96FB\\u8A71 / \\u624B\\u6A5F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: \"\\u5099\\u8A3B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.map((row, index) =>\n          /*#__PURE__*/\n          // () => return value\n          // 所以這下面都是 return 的元件\n          // 或是用 { } 裡頭加上 return ()...\n          // key={index} 為參考值，不會顯示\n          _jsxDEV(StyledTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: row.gender === 'F' ? '女' : '男'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: row.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: row.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"primary\",\n                \"aria-label\": \"edit a record\",\n                onClick: () => {\n                  setOpenEdit(true);\n                  setEditIndex(index);\n                },\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"secondary\",\n                \"aria-label\": \"delete a record\",\n                onClick: () => delRecord(index),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 25\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomizedTables, \"dMXSXPkrQ6wfJ/v8V+lqzXHFZXM=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomizedTables;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedTables\");","map":{"version":3,"sources":["/Users/Alice/Desktop/前端養成第三期/0719-21&23&26 React/week4/myui/src/Contact.js"],"names":["React","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","IconButton","Userform","EditIcon","DeleteIcon","StyledTableCell","theme","head","backgroundColor","color","palette","common","white","body","fontSize","StyledTableRow","root","action","hover","createData","name","gender","phone","email","useStyles","table","minWidth","CustomizedTables","classes","rows","setRows","useState","openAdd","setopenAdd","openEdit","setOpenEdit","editIndex","setEditIndex","addRecord","isAdd","row","data","func","fetch","method","JSON","stringify","headers","then","res","json","id","list","push","slice","catch","e","console","log","modRecord","isMod","index","delRecord","window","confirm","newList","concat","useEffect","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAIA,MAAMC,eAAe,GAAGd,UAAU,CAAEe,KAAD,KAAY;AAC7CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAE,MADb;AAEJC,IAAAA,KAAK,EAAEH,KAAK,CAACI,OAAN,CAAcC,MAAd,CAAqBC;AAFxB,GADuC;AAK7CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AALuC,CAAZ,CAAD,CAAV,CAQpBnB,SARoB,CAAxB;AAUA,MAAMoB,cAAc,GAAGxB,UAAU,CAAEe,KAAD,KAAY;AAC5CU,EAAAA,IAAI,EAAE;AACJ,0BAAsB;AACpBR,MAAAA,eAAe,EAAEF,KAAK,CAACI,OAAN,CAAcO,MAAd,CAAqBC;AADlB;AADlB;AADsC,CAAZ,CAAD,CAAV,CAMnBpB,QANmB,CAAvB;;AAQA,SAASqB,UAAT,CAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgD;AAC5C;AACA,SAAO;AAAEH,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB,GAAP;AACH;;AAGD,MAAMC,SAAS,GAAGhC,UAAU,CAAC;AAC3BiC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL;AADoB,CAAD,CAA5B;AAMA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACzC,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBxC,KAAK,CAACyC,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB3C,KAAK,CAACyC,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0B7C,KAAK,CAACyC,QAAN,CAAe,KAAf,CAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4B/C,KAAK,CAACyC,QAAN,CAAe,CAAf,CAAlC,CALyC,CASzC;;AACA,QAAMO,SAAS,GAAG,CAACC,KAAD,EAAOnB,IAAP,EAAYC,MAAZ,EAAmBC,KAAnB,EAAyBC,KAAzB,KAAmC;AACnD,QAAGgB,KAAH,EAAU;AACR,YAAMC,GAAG,GAAErB,UAAU,CAACC,IAAD,EAAMC,MAAN,EAAaC,KAAb,EAAmBC,KAAnB,CAArB;AACA,YAAMkB,IAAI,GAAG;AAAEC,QAAAA,IAAI,EAAE,QAAR;AAAkBD,QAAAA,IAAI,EAACD;AAAvB,OAAb;AACAG,MAAAA,KAAK,CAAC,mCAAD,EAAqC;AACxCC,QAAAA,MAAM,EAAE,MADgC;AAExC/B,QAAAA,IAAI,EAAEgC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFkC;AAEZ;AAC5BM,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAH+B,OAArC,CAAL,CAOCC,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQMP,IAAI,IAAI;AACZ,YAAGA,IAAI,CAAC,QAAD,CAAJ,KAAmB,MAAtB,EAA6B;AAC3BD,UAAAA,GAAG,CAACW,EAAJ,GAASV,IAAI,CAAC,IAAD,CAAb;AACA,gBAAMW,IAAI,GAAGvB,IAAb,CAF2B,CAER;;AACnBuB,UAAAA,IAAI,CAACC,IAAL,CAAUb,GAAV,EAH2B,CAGX;;AAChBV,UAAAA,OAAO,CAACsB,IAAI,CAACE,KAAL,CAAW,CAAX,CAAD,CAAP;AACD;AACF,OAfD,EAgBCC,KAhBD,CAgBOC,CAAC,IAAG;AACT;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BF,CAA3B;AACD,OAnBD;AAoBH;;AACDvB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GA1BC;;AA6BA,QAAM0B,SAAS,GAAG,CAACC,KAAD,EAAOxC,IAAP,EAAYC,MAAZ,EAAmBC,KAAnB,EAAyBC,KAAzB,EAA+BsC,KAA/B,KAAyC;AACzDJ,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCG,KAAjC;;AACA,QAAGD,KAAH,EAAU;AACN,YAAMR,IAAI,GAAGvB,IAAb;AACAuB,MAAAA,IAAI,CAACS,KAAD,CAAJ,GAAY1C,UAAU,CAACC,IAAD,EAAMC,MAAN,EAAaC,KAAb,EAAmBC,KAAnB,CAAtB;AACAO,MAAAA,OAAO,CAACsB,IAAI,CAACE,KAAL,CAAW,CAAX,CAAD,CAAP,CAHM,CAGkB;;AAExB,YAAMd,GAAG,GAAErB,UAAU,CAACC,IAAD,EAAMC,MAAN,EAAaC,KAAb,EAAmBC,KAAnB,CAArB;AACAiB,MAAAA,GAAG,CAACW,EAAJ,GAAStB,IAAI,CAACgC,KAAD,CAAJ,CAAYV,EAArB;AACA,YAAMV,IAAI,GAAG;AAAEC,QAAAA,IAAI,EAAE,QAAR;AAAkBD,QAAAA,IAAI,EAACD;AAAvB,OAAb;AACAG,MAAAA,KAAK,CAAC,mCAAD,EAAqC;AACxCC,QAAAA,MAAM,EAAE,MADgC;AAExC/B,QAAAA,IAAI,EAAEgC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFkC;AAEZ;AAC5BM,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAH+B,OAArC,CAAL,CAOCC,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQMP,IAAI,IAAI;AACZ,YAAGA,IAAI,CAAC,QAAD,CAAJ,KAAmB,MAAtB,EAA6B;AAC3B,gBAAMW,IAAI,GAAGvB,IAAb,CAD2B,CACR;;AACnBuB,UAAAA,IAAI,CAACS,KAAD,CAAJ,GAAcrB,GAAd,CAF2B,CAER;;AACnBV,UAAAA,OAAO,CAACsB,IAAI,CAACE,KAAL,CAAW,CAAX,CAAD,CAAP;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAuC7B,IAAvC;AACD;AACF,OAfD,EAgBC0B,KAhBD,CAgBOC,CAAC,IAAG;AACT;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BF,CAA3B;AACD,OAnBD;AAoBH;;AACDrB,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAhCD;;AAkCA,QAAM2B,SAAS,GAAID,KAAD,IAAW;AAC3B,QAAGE,MAAM,CAACC,OAAP,CAAe,gBAAcnC,IAAI,CAACgC,KAAD,CAAJ,CAAYzC,IAA1B,GAAgC,IAA/C,CAAH,EAAyD;AACvD;AACA;AACA;AACA,YAAMqB,IAAI,GAAG;AAAEC,QAAAA,IAAI,EAAE,QAAR;AAAkBS,QAAAA,EAAE,EAACtB,IAAI,CAACgC,KAAD,CAAJ,CAAYV;AAAjC,OAAb;AACER,MAAAA,KAAK,CAAC,mCAAD,EAAqC;AACxCC,QAAAA,MAAM,EAAE,MADgC;AAExC/B,QAAAA,IAAI,EAAEgC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFkC;AAEZ;AAC5BM,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAH+B,OAArC,CAAL,CAOCC,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQMP,IAAI,IAAI;AACZ,YAAGA,IAAI,CAAC,QAAD,CAAJ,KAAmB,MAAtB,EAA6B;AAC3B,gBAAMW,IAAI,GAAGvB,IAAb;AACA,gBAAMoC,OAAO,GAAGb,IAAI,CAACE,KAAL,CAAW,CAAX,EAAaO,KAAb,EAAoBK,MAApB,CAA2Bd,IAAI,CAACE,KAAL,CAAWO,KAAK,GAAC,CAAjB,CAA3B,CAAhB;AACA/B,UAAAA,OAAO,CAACmC,OAAD,CAAP;AACD;AACF,OAdD,EAeCV,KAfD,CAeOC,CAAC,IAAG;AACT;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BF,CAA3B;AACD,OAlBD;AAmBH;AACF,GA1BD,CAzEyC,CAqGzC;;;AACAlE,EAAAA,KAAK,CAAC6E,SAAN,CAAgB,MAAK;AACnB,UAAM1B,IAAI,GAAG;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAb;AACAC,IAAAA,KAAK,CAAC,mCAAD,EAAqC;AACxCC,MAAAA,MAAM,EAAE,MADgC;AAExCG,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF+B;AAKxClC,MAAAA,IAAI,EAAEgC,IAAI,CAACC,SAAL,CAAeL,IAAf,CALkC,CAKb;;AALa,KAArC,CAAL,CAOCO,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQMP,IAAI,IAAI;AACZ,UAAGA,IAAI,CAAC,QAAD,CAAJ,KAAmB,MAAtB,EAA6B;AAC3BgB,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBjB,IAArB;AACAX,QAAAA,OAAO,CAACW,IAAI,CAAC,MAAD,CAAL,CAAP;AACD;AACF,KAbD,EAcCc,KAdD,CAcOC,CAAC,IAAG;AACT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BF,CAA3B;AACD,KAlBD;AAmBD,GArBD,EAqBE,EArBF;AAuBA,sBACE;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AACI,MAAA,KAAK,EAAC,SADV;AAEI,MAAA,OAAO,EAAE,MAAMvB,UAAU,CAAC,IAAD,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAOMD,OAAO,iBAAI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC,KAAb;AACT,MAAA,IAAI,EAAEM,SADG;AAET,MAAA,IAAI,EAAEnB,UAAU,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV;AAFP;AAAA;AAAA;AAAA;AAAA,YAPjB,EAYMe,QAAQ,iBAAI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC,MAAb;AACV,MAAA,IAAI,EAAEyB,SADI;AAEV,MAAA,IAAI,EAAE9B,IAAI,CAACO,SAAD,CAFA;AAGV,MAAA,KAAK,EAAEA;AAHG;AAAA;AAAA;AAAA;AAAA,YAZlB,eAgBI,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAErC,KAA3B;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAE6B,OAAO,CAACH,KAA1B;AAAiC,sBAAW,kBAA5C;AAAA,gCAEI,QAAC,SAAD;AAAA,iCACA,QAAC,QAAD;AAAA,oCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAYI,QAAC,SAAD;AAAA,oBACCI,IAAI,CAACuC,GAAL,CAAS,CAAC5B,GAAD,EAAKqB,KAAL;AAAA;AACN;AACA;AACA;AAEA;AACA,kBAAC,cAAD;AAAA,oCACI,QAAC,eAAD;AAAiB,cAAA,SAAS,EAAC,IAA3B;AAA+B,cAAA,KAAK,EAAC,KAArC;AAAA,wBACKrB,GAAG,CAACpB;AADT;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA,wBAA+BoB,GAAG,CAACnB,MAAJ,KAAe,GAAf,GAAoB,GAApB,GAAwB;AAAvD;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA,wBAA+BmB,GAAG,CAAClB;AAAnC;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA,wBAA+BkB,GAAG,CAACjB;AAAnC;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,MAAvB;AAAA,sCACI,QAAC,UAAD;AAAY,gBAAA,KAAK,EAAC,SAAlB;AACI,8BAAW,eADf;AAEI,gBAAA,OAAO,EAAE,MAAK;AAACY,kBAAAA,WAAW,CAAC,IAAD,CAAX;AAAmBE,kBAAAA,YAAY,CAACwB,KAAD,CAAZ;AAAoB,iBAF1D;AAAA,uCAGI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI,QAAC,UAAD;AAAY,gBAAA,KAAK,EAAC,WAAlB;AACI,8BAAW,iBADf;AAEI,gBAAA,OAAO,EAAE,MAAKC,SAAS,CAACD,KAAD,CAF3B;AAAA,uCAGI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA,aAAqBA,KAArB;AAAA;AAAA;AAAA;AAAA,kBANH;AADD;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+DD;;GA5LuBlC,gB;UACNH,S;;;KADMG,gB","sourcesContent":["import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport {IconButton} from '@material-ui/core';\nimport Userform from './UserForm';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: 'gray',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction createData(name, gender, phone, email) {\n    // 回傳成物件\n    return { name, gender, phone, email };\n}\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n  const [rows, setRows] = React.useState([]);\n  const [openAdd, setopenAdd] = React.useState(false);\n  const [openEdit, setOpenEdit] = React.useState(false);\n  const [editIndex, setEditIndex] = React.useState(0);\n\n\n\n  // 新增資料\n  const addRecord = (isAdd,name,gender,phone,email) => {\n    if(isAdd) {\n      const row =createData(name,gender,phone,email);\n      const data = { func: 'insert', data:row };\n      fetch('http://localhost/api/user_mgt.php',{\n        method: 'POST',\n        body: JSON.stringify(data), // 傳給後端 api 的參數\n        headers: {\n          'Content-Type': 'application/json'\n        }     \n      })\n      .then(res => res.json())\n      .then(data => {\n        if(data['status'] === 'succ'){\n          row.id = data['id'];\n          const list = rows; // 所有資料\n          list.push(row); // 新增資料\n          setRows(list.slice(0));\n        }\n      })\n      .catch(e=> {\n        // 有錯\n        console.log('fetch error:',e);\n      })\n  }\n  setopenAdd(false);\n} \n\n\n  const modRecord = (isMod,name,gender,phone,email,index) => {\n    console.log('modRecord: index =',index);  \n    if(isMod) {\n        const list = rows;\n        list[index]=createData(name,gender,phone,email);\n        setRows(list.slice(0)); // slice(0) 全陣列的複製\n\n        const row =createData(name,gender,phone,email);\n        row.id = rows[index].id;\n        const data = { func: 'update', data:row };\n        fetch('http://localhost/api/user_mgt.php',{\n          method: 'POST',\n          body: JSON.stringify(data), // 傳給後端 api 的參數\n          headers: {\n            'Content-Type': 'application/json'\n          }     \n        })\n        .then(res => res.json())\n        .then(data => {\n          if(data['status'] === 'succ'){\n            const list = rows; // 所有資料\n            list[index] = row; // 更新資料\n            setRows(list.slice(0));\n            console.log('fetch update succ, rows:',rows);\n          }\n        })\n        .catch(e=> {\n          // 有錯\n          console.log('fetch error:',e);\n        })\n    }  \n    setOpenEdit(false);\n  }\n\n  const delRecord = (index) => {\n    if(window.confirm('確認刪除此筆紀錄？[ '+rows[index].name+ ' ]')) {\n      // const list = rows;\n      // const newList = list.slice(0,index).concat(list.slice(index+1));\n      // setRows(newList);\n      const data = { func: 'delete', id:rows[index].id };\n        fetch('http://localhost/api/user_mgt.php',{\n          method: 'POST',\n          body: JSON.stringify(data), // 傳給後端 api 的參數\n          headers: {\n            'Content-Type': 'application/json'\n          }     \n        })\n        .then(res => res.json())\n        .then(data => {\n          if(data['status'] === 'succ'){\n            const list = rows;\n            const newList = list.slice(0,index).concat(list.slice(index+1));\n            setRows(newList);\n          }\n        })\n        .catch(e=> {\n          // 有錯\n          console.log('fetch error:',e);\n        })\n    }\n  }\n\n  // componentDidMount\n  React.useEffect(()=> {\n    const data = {func: 'query'};\n    fetch('http://localhost/api/user_mgt.php',{\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data) // 傳給後端 api 的參數\n    })\n    .then(res => res.json())\n    .then(data => {\n      if(data['status'] === 'succ'){\n        console.log('data: ',data)\n        setRows(data['data']);\n      }\n    })\n    .catch(e=> {\n      // 有錯\n      console.log('catch error!');\n      console.log('fetch error:',e);\n    })\n  },[])\n\n  return (\n    <div>\n        <Button variant='contained'\n            color='primary'\n            onClick={() => setopenAdd(true)}>\n                新增聯絡人\n        </Button>\n        {/* 新增聯絡人 */}\n        { openAdd && <Userform op='add'\n            func={addRecord}\n            data={createData('','','','')}/>}\n\n        {/* 修改聯絡人 */}\n        { openEdit && <Userform op='edit'\n            func={modRecord}\n            data={rows[editIndex]}\n            index={editIndex}/>}\n        <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"customized table\">\n                {/* 表頭 */}\n                <TableHead>\n                <TableRow>\n                    <StyledTableCell>姓名</StyledTableCell>\n                    <StyledTableCell align=\"left\">性別</StyledTableCell>\n                    <StyledTableCell align=\"left\">電話 / 手機</StyledTableCell>\n                    <StyledTableCell align=\"left\">Email</StyledTableCell>\n                    <StyledTableCell align=\"left\">備註</StyledTableCell>\n                </TableRow>\n                </TableHead>\n\n                <TableBody>\n                {rows.map((row,index) => (\n                    // () => return value\n                    // 所以這下面都是 return 的元件\n                    // 或是用 { } 裡頭加上 return ()...\n\n                    // key={index} 為參考值，不會顯示\n                    <StyledTableRow key={index}>\n                        <StyledTableCell component=\"th\"scope=\"row\">\n                            {row.name}\n                        </StyledTableCell>\n                        <StyledTableCell align=\"left\">{row.gender === 'F'? '女':'男'}</StyledTableCell>\n                        <StyledTableCell align=\"left\">{row.phone}</StyledTableCell>\n                        <StyledTableCell align=\"left\">{row.email}</StyledTableCell>\n                        <StyledTableCell align=\"left\">\n                            <IconButton color='primary'\n                                aria-label='edit a record'\n                                onClick={()=> {setOpenEdit(true); setEditIndex(index)}}> \n                                <EditIcon/>\n                            </IconButton>\n                            <IconButton color='secondary'\n                                aria-label='delete a record'\n                                onClick={()=> delRecord(index)}> \n                                <DeleteIcon/>\n                            </IconButton>\n                        </StyledTableCell>\n                    </StyledTableRow>\n                ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}