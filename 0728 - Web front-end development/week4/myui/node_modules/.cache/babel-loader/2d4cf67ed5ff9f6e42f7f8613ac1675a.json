{"ast":null,"code":"var _jsxFileName = \"/Users/Alice/Desktop/\\u524D\\u7AEF\\u990A\\u6210\\u7B2C\\u4E09\\u671F/0719-21&23&26 React/week4/myui/src/GridSample.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(12, 4)\n  },\n  card: {\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    border: '1px solid black',\n    borderRadius: '5px',\n    textAlign: 'center'\n  },\n  icon: {\n    padding: theme.spacing(2, 0)\n  },\n  title: {\n    padding: theme.spacing(2)\n  },\n  featureList: {\n    padding: theme.spacing(2)\n  }\n}));\nconst content = {\n  title: ['Explore Tokyo', 'Explore Tokyo New', 'Eat Delicious Food', 'Visit the Best Spots'],\n  description: ['Discover Tokyo like you never have before.', 'Discover Tokyo like you never have before.', 'Find the best local restaurants and bars.', 'Check out some of the less known locations and attractions for tourists.']\n};\n\nconst App = () => {\n  _s();\n\n  const classes = useStyles();\n  const [mygrid, setMygrid] = React.useState([]);\n  const [index, setIndex] = React.useState(-1); // 產生物件\n\n  function createData(heading, content) {\n    return {\n      heading,\n      content\n    };\n  }\n\n  const addGrid = () => {\n    // 若 index 已超過現有資料數，則停止\n    if (index > content.title.length) {\n      return '';\n    } else {\n      const old_index = index;\n      const new_index = old_index + 1;\n      setIndex(new_index); // 取得新 index\n\n      const list = mygrid;\n      list.push(createData(content.title[new_index], content.description[new_index]));\n      const new_list = list;\n      console.log(new_list);\n      setMygrid(new_list.slice(0));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: addGrid,\n      children: \"\\u65B0\\u589E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      component: \"section\",\n      maxWidth: \"lg\",\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        alignItems: \"stretch\",\n        children: mygrid.map((grid, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.card,\n            children: [/*#__PURE__*/_jsxDEV(EmojiPeopleIcon, {\n              color: \"primary\",\n              fontSize: \"large\",\n              className: classes.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"h3\",\n              className: classes.title[index],\n              children: grid.heading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.featureList,\n              children: grid.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"d1EKjumGgsuVia47sJwRgrEmets=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Alice/Desktop/前端養成第三期/0719-21&23&26 React/week4/myui/src/GridSample.js"],"names":["React","makeStyles","Grid","Typography","Container","EmojiPeopleIcon","Button","useStyles","theme","root","padding","spacing","card","height","width","display","flexDirection","alignItems","border","borderRadius","textAlign","icon","title","featureList","content","description","App","classes","mygrid","setMygrid","useState","index","setIndex","createData","heading","addGrid","length","old_index","new_index","list","push","new_list","console","log","slice","map","grid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(12, 4),\n  },\n  card: {\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    border: '1px solid black',\n    borderRadius: '5px',\n    textAlign: 'center',\n  },\n  icon: {\n    padding: theme.spacing(2, 0),\n  },\n  title: {\n    padding: theme.spacing(2),\n  },\n  featureList: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst content = {\n    title: [\n        'Explore Tokyo',\n        'Explore Tokyo New',\n        'Eat Delicious Food',\n        'Visit the Best Spots'\n    ],\n    description: [\n        'Discover Tokyo like you never have before.',\n        'Discover Tokyo like you never have before.',\n        'Find the best local restaurants and bars.',\n        'Check out some of the less known locations and attractions for tourists.'\n    ]\n};\n\nconst App = () => {\n  const classes = useStyles();\n  const [mygrid, setMygrid] = React.useState([]);\n  const [index, setIndex] = React.useState(-1);\n\n  // 產生物件\n  function createData(heading,content){\n      return {heading,content};\n  }\n\n  const addGrid = () => {\n        \n      // 若 index 已超過現有資料數，則停止\n      if( index > content.title.length){\n          return '';\n      } else {\n        const old_index = index;\n        const new_index = old_index+1;\n        setIndex(new_index); // 取得新 index\n      \n        const list = mygrid;\n        list.push(createData(content.title[new_index],content.description[new_index]));\n        const new_list = list;\n        console.log(new_list);\n        setMygrid(new_list.slice(0));\n        \n      }\n  }\n\n\n  return (\n    <div>\n        <Button variant=\"outlined\" color=\"primary\" onClick={addGrid}>新增</Button>\n        <Container component=\"section\" maxWidth=\"lg\"  className={classes.root}>  \n            <Grid container spacing={3} alignItems=\"stretch\">\n                {\n                    mygrid.map((grid,index) => (\n                        \n                        <Grid item xs={12} sm={4}>\n                            <div className={classes.card}>\n                            \n                                {/* icon */}\n                                <EmojiPeopleIcon\n                                color=\"primary\"\n                                fontSize=\"large\"\n                                className={classes.icon}\n                                />\n\n                                {/* 大標 */}\n                                <Typography variant=\"h5\" component=\"h3\" className={classes.title[index]}>\n                                {grid.heading}\n                                </Typography>\n\n                                {/* 文案 */}\n                                <Typography className={classes.featureList}>\n                                {grid.content}\n                                </Typography>                  \n                            </div>\n                        </Grid>\n                    ))\n                }\n          \n            </Grid>\n        </Container>\n    </div>\n    \n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}